{
  "name": "summora",
  "private": true,
  "author": "@bennettdams",
  "scripts": {
    "/////////////// Meta": "",
    "postinstall": "npm run p:generate",
    "/////////////// DEPLOY": "",
    "vercel-build": "prisma generate && prisma migrate deploy && next build",
    "/////////////// RUN": "",
    "dev": "next dev -p 3000",
    "build": "next build",
    "build:analyze": "ANALYZE=true npm run build",
    "start": "next start -p 3000",
    "devprod": "npm run build && npm run start",
    "debug": "cross-env NODE_OPTIONS='--inspect' npm run dev",
    "/////////////// CHECK": "",
    "lint": "next lint",
    "lint2": "eslint . --ext ts --ext tsx --ext js",
    "type-check": "tsc --pretty --noEmit",
    "tc": "npm run type-check",
    "format": "prettier --write ./src/",
    "find-dead-exports": "npx ts-prune --ignore 'node_modules' | grep -v getStaticProps |  grep -v getStaticPaths | grep -v getServerSideProps | grep -v default",
    "/////////////// DB": "",
    "p:dev": "npx prisma migrate dev --schema ./prisma/schema.prisma",
    "p:dev-create": "npx prisma migrate dev --create-only --schema ./prisma/schema.prisma",
    "p:create": "npx prisma migrate dev --create-only --schema ./prisma/schema.prisma",
    "p:studio": "npx prisma studio --schema ./prisma/schema.prisma",
    "p:reset": "npx prisma migrate reset --schema ./prisma/schema.prisma",
    "p:reset-no-seed": "npx prisma migrate reset --skip-seed --schema ./prisma/schema.prisma",
    "p:generate": "npx prisma generate --schema ./prisma/schema.prisma",
    "p:format": "npx prisma format --schema ./prisma/schema.prisma",
    "p:seed": "npx prisma db seed",
    "p:validate": "npx prisma validate --schema ./prisma/schema.prisma",
    "/////////////// SETUP": "",
    "check-updates": "npx npm-check-updates -u",
    "cu": "npm run check-updates",
    "check": "npm run tc && npm run lint",
    "clean-install": "rm -rf .next && rm -rf node_modules && npm i",
    "depcheck": "npx depcheck"
  },
  "//scripts": [
    "vercel-build is used in the CI/CD pipeline. It uses Vercel's build step to run the prisma migrate deploy command to apply the migrations before Vercel deploys the serverless functions. See https://www.prisma.io/docs/guides/deployment/deployment-guides/deploying-to-vercel#prisma-workflow"
  ],
  "dependencies": {
    "@aws-sdk/client-s3": "^3.326.0",
    "@aws-sdk/s3-presigned-post": "^3.326.0",
    "@formkit/auto-animate": "^1.0.0-beta.6",
    "@headlessui/react": "^1.7.14",
    "@heroicons/react": "^2.0.17",
    "@hookform/resolvers": "^3.1.0",
    "@next-auth/prisma-adapter": "^1.0.6",
    "@prisma/client": "^4.13.0",
    "@tanstack/react-query": "^4.29.5",
    "@tanstack/react-query-devtools": "^4.29.6",
    "@trpc/client": "^10.24.0",
    "@trpc/next": "^10.24.0",
    "@trpc/react-query": "^10.24.0",
    "@trpc/server": "^10.24.0",
    "@vercel/analytics": "^1.0.1",
    "next": "^13.3.4",
    "next-auth": "^4.22.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-error-boundary": "^4.0.4",
    "react-hook-form": "^7.43.9",
    "sharp": "^0.32.1",
    "superjson": "^1.12.3",
    "zod": "^3.21.4"
  },
  "devDependencies": {
    "@next/bundle-analyzer": "^13.3.4",
    "@tailwindcss/forms": "^0.5.3",
    "@tanstack/eslint-plugin-query": "^4.29.4",
    "@types/formidable": "^2.0.5",
    "@types/node": "^18.16.3",
    "@types/react": "^18.2.2",
    "@types/react-dom": "^18.2.3",
    "@types/sharp": "^0.31.1",
    "@typescript-eslint/eslint-plugin": "^5.59.2",
    "@typescript-eslint/parser": "^5.59.2",
    "autoprefixer": "^10.4.14",
    "cross-env": "^7.0.3",
    "eslint": "8.39.0",
    "eslint-config-next": "^13.3.4",
    "eslint-config-prettier": "^8.8.0",
    "postcss": "^8.4.23",
    "prettier": "^2.8.8",
    "prettier-plugin-tailwindcss": "^0.2.8",
    "prisma": "^4.13.0",
    "tailwindcss": "^3.3.2",
    "ts-node": "^10.9.1",
    "typescript": "4.9.5"
  },
  "//devDependencies": [
    "autoprefixer & postcss for Tailwind",
    "eslint-config-next contains eslint-plugin-react, eslint-plugin-react-hooks and eslint-plugin-next. https://nextjs.org/docs/basic-features/eslint#eslint-config",
    "ts-node is only used for Prisma's seeding functionality"
  ],
  "prisma": {
    "seed": "ts-node --compiler-options {\"module\":\"CommonJS\"} prisma/seed.ts"
  }
}
